parameters:
    # Meta Data
    app_name: '...iSponsor!'
    app_version: '0.0.0'
    app_domain: 'smartresponsor.com'
    #
    # Redirect routs
    app_schema: 'https'
    app_homepage_route: homepage
    app_login_route: login
    app_logout_route: logout
    app_default_target_path: profile
    app_logged_out_target_route: homepage
    # Localisation
    app_locales: en|ru|uk
#    app_locales: en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr|zh_CN|bg|tr|lt
    app_locale: 'en'
    # Cache
    app_cache: 0
    app_cache_time: 360
    #
    # Mailing
    app_email_sender: 'taa0662621456@gmail.com'
    app_email_sender_name: '...iSponsor! Marketing America Corporation'
    app_notification_email_sender: 'taa0662621456@gmail.com'
    app_property: 'email'
    # Akismet
    app_akismet_key: 'weqweqweDFDFDFFDwqeqwewqewqe'
    # CSRF
    app_csrf_token: 'weqweqweDFDFDFFDwqeqwewqewqe'
    # Other parameters
    app_homepage_number_of_items: 10
    app_logo_url: '/favicon.ico'
    # Media folders parameters
    app_category_images_directory: '%env(APP_CATEGORY_IMAGE_DIRECTORY)%'
    app_menu_images_directory: '%env(APP_MENU_IMAGE_DIRECTORY)%'
    app_project_images_directory: '%env(APP_PROJECT_IMAGE_DIRECTORY)%'
    app_product_images_directory: '%env(APP_PRODUCT_IMAGE_DIRECTORY)%'
    app_event_images_directory: '%env(APP_EVENT_IMAGE_DIRECTORY)%'
    app_google_recaptcha: '%env(RECAPTCHA3_ENABLED)%'
    app_google_scope: '%env(RECAPTCHA_SCOPE)%'
    app_google_recaptcha_key: '%env(GOOGLE_RECAPTCHA_KEY)%'
    app_google_recaptcha_secret: '%env(GOOGLE_RECAPTCHA_SECRET)%'
    app_vendor_images_directory: '%env(APP_VENDOR_IMAGES_DIRECTORY)%'
    # Mercure
    app_mercure_secret_key: '%env(MERCURE_SECRET_KEY)%'
    app_secret: '%env(APP_SECRET)%'
    # router.request_context.host: '%env(default:default_domain:SYMFONY_DEFAULT_ROUTE_HOST)%'
    # router.request_context.scheme: '%env(default:default_scheme:SYMFONY_DEFAULT_ROUTE_SCHEME)%'
    # Sitemap
    router.request_context.host: smartresponsor.com
    router.request_context.scheme: https
    container.dumper.inline_factories: true
    exceptions:
        App\Exception\Vendor\VendorNotFoundException: { code: 404, hidden: false }
        App\Exception\Vendor\VendorPaymentNotFoundException: { code: 404, hidden: false }
        App\Exception\Vendor\VendorShipmentNotFoundException: { code: 404, hidden: false }
        App\Exception\CategoryNotFoundException: { code: 404, hidden: false }
        App\Exception\Project\ProjectNotFoundException: { code: 404, hidden: false }
        App\Exception\Product\NotFoundException: { code: 404, hidden: false }
        App\Exception\Product\ProductPaymentNotFoundException: { code: 404, hidden: false }
        App\Exception\Product\ProductShipmentNotFoundException: { code: 404, hidden: false }
        App\Exception\AttachmentNotFoundException: { code: 404, hidden: false }
        App\Exception\EventNotFoundException: { code: 404, hidden: false }
        App\Exception\TypeNotFoundException: { code: 404, hidden: false }
        # https://ru.symfony.com.ua/doc/current/event_dispatcher/before_after_filters.html
        tokens:
          client1: pass1
          client2: pass2


services:
    App\Factory\Vendor\VendorFactory:
        class: App\Factory\Vendor\VendorFactory
        factory: 'VendorSecurityFactory'

#    App\Factory\Vendor\VendorFactory:
#        factory: ['App\Factory\Vendor\VendorFactory', 'create']

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:               # defines the scalar arguments once and apply them to any service defined/created in this file
#            string $app: '%kernel.project_dir%'
            string $locales: '%app_locales%'
            string $locale: '%app_locale%'
            string $pathToEntity: 'App\Entity\'
            string $pathToRepository: 'App\Repository\'
            string $pathToType: 'App\Form\'
            string $pathToLogin: '%app_login_route%'
            string $pathToLoginSuccess: '%app_login_route%'
            string $token: '%app_csrf_token%'
#            $emailSender: '%app_email_sender%'
            string $akismetKey: "%env(AKISMET_KEY)%"
#            $adminEmail: "%env(string:default:app_email_sender:ADMIN_EMAIL)%"
#            string $projectImageAttachmentsPath: "%app_project_images_directory%"
#            string $productImageAttachmentsPath: "%app_product_images_directory%"
#            string $categoryImageAttachmentsPath: "%app_category_images_directory%"
#            string $vendorImageAttachmentsPath: "%app_vendor_images_directory%"
#            string $daysBeforeRemoveRejectedReview: ""
    Redis:
        class: Redis
        calls:
            - connect:
                  - localhost
                  - '%env(int:REDIS_PORT)%'
            # uncomment the following if your Redis server requires a password
            # - auth:
            # - '%env(REDIS_PASSWORD)%'

#    twilio.client:
#        class: Twilio\Rest\Client
#        arguments: [ '%twilio_sid%', '%twilio_token%' ]
#
#        # Add an alias for the twilio.client service
#        Twilio\Rest\Client: '@twilio.client'

# Must working
#    app.sitemap.blog_post_subscriber:
#        class: App\Listener\SitemapListener
#        arguments:
#            - '@doctrine'
#        tags:
#            - { name: "kernel.event_subscriber", priority: 100 }
    api_zone_matcher:
        class: Symfony\Component\HttpFoundation\RequestMatcher
        arguments: [ '^/api/' ]

    hwi_oauth.user.provider.entity:
        class: App\Security\HWIOAuthAuthenticator
        arguments:
            - '@doctrine'
            - 'App\\Entity\\Vendor\\VendorSecurity'
            - [facebook: facebookId, google: googleId, github: githubId]
#            - postgres
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
            # you can optionally pass an array of options. The only options are 'prefix' and 'ttl',
            # which define the prefix to use for the keys to avoid collision on the Redis server
            # and the expiration time for any given entry (in seconds), defaults are 'sf_s' and null:
            # - { 'prefix': 'my_prefix', 'ttl': 600 }

    App\Service\CloudflareIpResolver:
        decorates: 'karser_recaptcha3.ip_resolver'
        arguments:
            $decorated: '@App\Service\CloudflareIpResolver.inner'
            $requestStack: '@request_stack'

    App\EventSubscriber\LocaleSubscriber:
        #        arguments: [ '%kernel.default_locale%' ]
        arguments: [ '%app_locale%' ]
    #         tags: [kernel.event_subscriber] # uncomment the next line if you are not using autoconfigure

    App\Service\ObjectFileUploader:
        arguments:
            string $projectTargetDirectory: '%app_project_images_directory%'
            string $productTargetDirectory: '%app_product_images_directory%'
            string $categoryTargetDirectory: '%app_category_images_directory%'
            string $vendorTargetDirectory: '%app_vendor_images_directory%'
            string $eventTargetDirectory: '%app_event_images_directory%'

    App\Service\System\ExceptionMapping:
        arguments: ['%exceptions%']

    App\EventListener\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 10 }
#            -
#    App\EventListener\ExceptionListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception, priority: 11 }
#
#    App\EventListener\ZoneMatcherListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.request, priority: 300 }
#        arguments:
#            - '@api_zone_matcher'

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Trash/'
            - '../migrations/'
