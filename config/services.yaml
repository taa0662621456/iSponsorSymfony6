imports:
    - { resource: 'parameters.yaml' }
    - { resource: 'parameters_exceptions.yaml' }
    - { resource: 'services_defaults_bind.yaml' }

parameters:
    router.request_context.host: smartresponsor.com
    router.request_context.scheme: https
    container.dumper.inline_factories: true

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            string $locales: '%app_locales%'
            string $locale: '%app_locale%'
            string $entityNamespace: 'App\Entity\'
            string $repositoryNamespace: 'App\Repository\'
            string $typeNamespace: 'App\Form\'
            string $loginPath: '%app_login_route%'
            string $loginSuccessPath: '%app_login_route%'
            string $token: '%app_csrf_token%'
            # $emailSender: '%app_email_sender%'
            string $akismetKey: "%env(AKISMET_KEY)%"

    Doctrine\Persistence\ObjectManager: '@doctrine.orm.postgres_entity_manager'
#    App\Interface\DataFixturesInterface\DataFixturesFactoryInterface: '@App\Service\DataFixtures\DataFixturesFactory'
    Symfony\Component\OptionsResolver\OptionsResolver: ~
#    Symfony\Component\Validator\Mapping\Factory\MetadataFactoryInterface: '@validator.mapping.factory.default'

    App\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', priority: 10 }

    Faker\Generator:
        factory: ['Faker\Factory', 'create']

    Redis:
        class: Redis
        calls:
            - connect:
                  - localhost
                  - '%env(int:REDIS_PORT)%'
            # uncomment the following if your Redis server requires a password
            # - auth:
            # - '%env(REDIS_PASSWORD)%'

#    twilio.client:
#        class: Twilio\Rest\Client
#        arguments: [ '%twilio_sid%', '%twilio_token%' ]
#
#        # Add an alias for the twilio.client service
#        Twilio\Rest\Client: '@twilio.client'

    hwi_oauth.user.provider.entity:
        class: App\Security\HWIOAuthAuthenticator
        arguments:
            - '@doctrine'
            - 'App\Entity\Vendor\VendorSecurity'
            - [facebook: facebookId, google: googleId, github: githubId]

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
            # - { 'prefix': 'my_prefix', 'ttl': 600 }

    App\Service\CloudflareIpResolver:
        decorates: 'karser_recaptcha3.ip_resolver'
        arguments:
            $decorated: '@App\Service\CloudflareIpResolver.inner'
            $requestStack: '@request_stack'

    App\EventListener\RepositoryMetadataManagerListener:
        class: App\EventListener\RepositoryMetadataManagerListener
        tags:
            - { name: doctrine.event_subscriber }

    App\EventSubscriber\LocaleSubscriber:
        arguments: [ '%app_locale%' ]

    App\Service\ObjectFileUploader:
        arguments:
            string $projectTargetDirectory: '%app_project_images_directory%'
            string $productTargetDirectory: '%app_product_images_directory%'
            string $categoryTargetDirectory: '%app_category_images_directory%'
            string $vendorTargetDirectory: '%app_vendor_images_directory%'
            string $eventTargetDirectory: '%app_event_images_directory%'

    App\Service\System\ExceptionMapping:
        arguments: ['%exceptions%']

    App\EventListener\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 10 }
#            -
#    App\EventListener\ExceptionListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception, priority: 11 }
#
#    App\EventListener\ZoneMatcherListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.request, priority: 300 }
#        arguments:
#            - '@api_zone_matcher'

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Trash/'
            - '../src/Dto/'
            - '../migrations/'
