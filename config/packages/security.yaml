security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\Vendor\VendorsSecurity:
            algorithm: auto
    providers:
        # https://symfony.com.ua/doc/current/security/multiple_user_providers-ru.html
        chain_provider:
            chain:
                #providers: [in_memory, database_users]
                providers: [database_users]
        in_memory:
            memory:
                users:
                    admin: # It's login
                        password: kitten
                        roles: 'ROLE_ADMIN'
        database_users:
            entity:
                class: App\Entity\Vendor\VendorsSecurity
                property: '%app_property%'
    role_hierarchy:
        ROLE_USER: [ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: [ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    firewalls:
        csrf_protection: ~
        # https://symfony.com.ua/doc/current/security/csrf.html

#        wsse:
#            pattern:   ^/wsse/
#            stateless: true
#            wsse:      { lifetime: 30 }
#            security: false

#        api:
#            pattern: ^/api
#            stateless: true
#            jwt: ~
#            provider: database_users
#            security: false
#            logout: ~
#            guard:
#                authenticators:
#                - App\Security\TokenAuthenticator
#                - lexik_jwt_authentication.jwt_token_authenticator
#                - FacebookConnectAuthenticator
                # аутентификаторов и комбинаций с точками входов может быть несколько. Например: FB, Google
                # https://symfony.com.ua/doc/current/security/multiple_guard_authenticators-ru.html

#        admin:
#            pattern: ^/admin
#            provider: in_memory
#            security: true # отключает контекст безопасности
#            guard:
#                authenticators:
#                    - App\Security\LoginFormAuthenticator
            #remember_me: ~
            #secret: '%kernel.secret%'
            #lifetime: 604800 # 1 week in seconds
            #path: /admin
            #name: AdminRememberCookie
            #always_remember_me: true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        main:
#            #pattern: ^/login
#            switch_user: { role: ROLE_ADMIN }
#            provider: database_users
#            http_basic: ~
#            custom_authenticators:
#                - App\Security\LoginFormAuthenticator
#                #- FacebookConnectAuthenticator
#                # аутентификаторов и комбинаций с точками входов может быть несколько. Например: FB, Google
#                # https://symfony.com.ua/doc/current/security/multiple_guard_authenticators-ru.html
#            entry_point: App\Security\LoginFormAuthenticator
#            # security: true # отключает контекст безопасности
#            form_login:
#                check_path: login_check
#                login_path: login
##                csrf_token_generator: security.csrf.token_manager
#                default_target_path: '%app_logged_in_target_routename%'
#                use_referer: true
#                target_path_parameter: redirect
#                failure_path_parameter: forgot
#                #failure_path: login
#                username_parameter: _email
#                password_parameter: _password
#            logout:
#                path: logout
#                target: '%app_logged_out_target_routename%'

#            login_link: # аутентификация с помощью уникальной временной ссылки
#                check_route: link_authenticator
#                signature_properties: [uuid, email]
#                lifetime: 300
#                max_uses: 3
                # optionally, configure the cache pool
                #used_link_cache: 'cache.redis'

                # Можно использовать, чтобы возвращать Token после успешной аутентификации
                # https://symfony.com.ua/doc/current/security/login_link.html#limit-login-link-lifetime
                # success_handler: App\Security\Authentication\LinkAuthSuccessHandlerAuthenticator

#            json_login:
#                check_path: jsonLogin
#                check_path: /api/login_check
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure


            # token_provider : 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'
            #
            # https://symfony.com.ua/doc/current/security/guard_authentication.html
#            remember_me:
#                secret: '%kernel.secret%'
#                lifetime: 604800 # 1 week in seconds
#                path: /
#                name: RememberCookie
#                always_remember_me: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/login, role: PUBLIC_ACCESS, requires_channel: https }
#        - { path: ^/(%app_locales%)/registration, role: PUBLIC_ACCESS, requires_channel: https }
#        - { path: ^/(%app_locales%)/dashboard, role: ROLE_ADMIN, requires_channel: https }
#        - { path: ^/(%app_locales%)/admin, roles: ROLE_ADMIN, requires_channel: https }
#        - { path: ^/(%app_locales%)/profile, roles: ROLE_USER }
#        - { path: ^/api, roles: ROLE_API_USER, requires_channel: https }
#         the 'path' value can be any valid regular expression
#         (this one will match URLs like /api/post/7298 and /api/comment/528491)
#        - { path: ^/api/(post|comment)/\d+$, roles: ROLE_USER }
#        - { path: ^/api$, roles: ROLE_USER }
